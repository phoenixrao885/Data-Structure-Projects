I generally performed well, scoring an A on most CS courses that at the time of writing are CS161, CS162, CS163, CS202 and CS250. Most were OOP classes that complemented my style of problem solving and were appreciably focused on working on interesting assignments as opposed to excelling at a test. My good performance on math courses can be attributed to a rigorous STEM background at high school that primed me well for university.

Few indispensable skills I've acquired at work include learning to teamwork in a dynamic setting and spontaneously problem solve- either over phone calls with angry customers or on complex trouble tickets requiring the confluence of several departments. With the rapid nature of PSU system updation, learning to keep up with new tools/procedures and relaying these appropriately to customers have also helped me become a continuous and quick learner. 

Relatively, I didn't do as well for the CS201 course (got a B) due to a freak accident on midterm day: commute delays costed me ~25 minutes of a difficult exam. Besides CS201, another course I scored below par for (a B) was CS251 (Discrete Structures 2) in which an unnaturally expansive syllabus was delivered over the short span of the term. The tests for this class also expected a firm grasp of concepts that assumed advanced mastery over the subject we never had time for. 

MECOP offers a diverse collection of companies seeking prospective students having little experience of industry. And industry experience would be paramount to uncovering another dimension of concepts learnt at school– its application for the real real world– and exercising these unworked concepts for better proficiency. The extra year requirement for MECOP can then be justified by the rounded learning experience that would make one a suitable candidate for working directly post graduation.

Computing as a career choice was instant- I was always interested at the prospect of a 'servant brain' that would undertake any batch of instructions issued to it, and the ability of personalizing these instructions to suit your needs. With the world moving towards a highly organized, efficient and sustainable future, regardless of the problem or situation; optimization, decision-making and accuracy and therefore computing, will be cornerstone to the success of any company. 


A very interesting project I worked on in Java was effectively a search engine involving a BST of a BST that interrogated underlying elements by a priority value and generated another BST for every search. The project utilized a very generic approach constructing an ADT but then built a very complex, personalized solution in the application program. The project provided me creative freedom of deciding the mechanism of a search and using it to produce 1000's of results at log n time complexity.

My future ambitions are quite ambitious! I would like to contribute to cutting-edge AI and expand the diversity of machine learning applications, specifically in the direction of understanding the basis of human thought. An interesting field in this regard is neuromorphic computing, where conventional computer architectures are being replaced for biological alternatives. As a distant eventuality, I would like to bring these human learning techniques into the purview of machine learning.

A new graduate has the sufficient aptitude and raw concepts ready to be put to use. He/she becomes employable when those concepts are comfortable when thrown into unfamiliar territory, and is open to augmentation with further learning. Additionally, they would share a fervent passion for computer science; to an extent that all learning is demonstrable beyond the purview of any university examination and unhindered by the limits of course syllabi.